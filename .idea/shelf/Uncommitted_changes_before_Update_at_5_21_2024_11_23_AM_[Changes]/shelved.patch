Index: creation.sql
===================================================================
diff --git a/creation.sql b/creation.sql
deleted file mode 100644
--- a/creation.sql	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
+++ /dev/null	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
@@ -1,57 +0,0 @@
-CREATE SCHEMA PlayListX;
-SET SCHEMA 'playlistx';
-CREATE TABLE Song(
-    id smallint primary key,
-    title varchar,
-    artist varchar,
-    year int,
-    albumName varchar(50),
-    featuredArtist varchar,
-    duration int,
-    genre varchar,
-    link varchar,
-    CONSTRAINT year_check check (year > 0 AND year <= 2024)
-);
-
-CREATE TABLE Listener
-(
-    id smallint primary key,
-    username varchar(20),
-    isAdmin boolean,
-    hash bytea,
-    salt bytea
-);
-
-
-CREATE TABLE Playlist(
-    id smallint primary key,
-    title varchar,
-    ownerId smallint,
-    creationDate date default current_date,
-    songsCount int default 0,
-    isPublic boolean,
-    totalDuration int default 0,
-    FOREIGN KEY (ownerId) REFERENCES Listener (id)
-);
-
-CREATE TABLE collaborator(
-    listener_id int,
-    playlist_id int,
-    FOREIGN KEY (playlist_id) REFERENCES Playlist (id),
-    FOREIGN KEY (listener_id) REFERENCES Listener (id)
-);
-
-CREATE TABLE songList(
-    playlist_id int,
-    song_id int,
-    FOREIGN KEY (playlist_id) REFERENCES Playlist (id),
-    FOREIGN KEY (song_id) REFERENCES Song (id)
-);
-
-CREATE TABLE likes
-(
-    user_id int,
-    song_id int,
-    FOREIGN KEY (song_id) REFERENCES Song (id),
-    FOREIGN KEY (user_id) REFERENCES Listener (id)
-);
\ No newline at end of file
Index: functions.sql
===================================================================
diff --git a/functions.sql b/functions.sql
deleted file mode 100644
--- a/functions.sql	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
+++ /dev/null	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
@@ -1,126 +0,0 @@
-CREATE OR  REPLACE FUNCTION update_song_count()
-RETURNS TRIGGER AS
-    $$
-    BEGIN
-        UPDATE Playlist
-        SET songsCount = (SELECT count(song_id) FROM song, songList, Playlist WHERE Song.id=song_id and playlist_id=Playlist.id);
-        RETURN NEW;
-    end;
-    $$
-LANGUAGE plpgsql;
-
-CREATE TRIGGER update_sngcnt_trigger
-    AFTER INSERT ON songList
-    FOR EACH ROW
-    EXECUTE FUNCTION update_song_count();
-
-
-CREATE OR  REPLACE FUNCTION update_total_duration()
-RETURNS TRIGGER AS
-    $$
-    BEGIN
-        UPDATE Playlist
-        SET totalDuration = (SELECT sum(duration) FROM song, songList WHERE Song.id=song_id);
-        RETURN NEW;
-    end;
-    $$
-LANGUAGE plpgsql;
-
-CREATE TRIGGER update_ttldrnt_trigger
-    AFTER INSERT ON songList
-    FOR EACH ROW
-    EXECUTE FUNCTION update_total_duration();
-
-
-CREATE  OR REPLACE  FUNCTION add_new_song(
-    songID smallint,
-    songTitle varchar,
-    artistName varchar,
-    yearNo int,
-    albumTitle varchar,
-    ftArtist varchar,
-    songDuration int,
-    genreName varchar,
-    songLink varchar)
-RETURNS TRIGGER AS
-    $$
-    BEGIN
-        INSERT INTO song VALUES (songID, songTitle, artistName, yearNo, albumTitle, ftArtist, songDuration, genreName, songLink);
-    end;
-    $$
-language plpgsql;
-
-CREATE TRIGGER add_song_trigger
-    BEFORE UPDATE ON song
-    FOR EACH ROW
-    EXECUTE FUNCTION add_new_song();
-
-CREATE OR REPLACE FUNCTION get_songs(song_name TEXT)
-RETURNS TABLE (
-    id smallint,
-    title varchar,
-    artist varchar,
-    year int,
-    albumName varchar(50),
-    featuredArtist varchar,
-    duration int,
-    genre varchar,
-    link varchar
-)
-LANGUAGE plpgsql AS $$
-BEGIN
-    RETURN QUERY EXECUTE 'SELECT * FROM ' || quote_ident(song_name);
-END;
-$$;
-
-SELECT * FROM get_songs('song'); --Runs the function
-
-DROP FUNCTION get_songs(text);
-
-
-CREATE OR REPLACE FUNCTION get_playlists(user_id TEXT)
-RETURNS TABLE (
-    id smallint,
-    title varchar,
-    ownerId smallint,
-    creationDate date,
-    songsCount int,
-    isPublic boolean,
-    totalDuration int
-)
-LANGUAGE plpgsql AS $$
-BEGIN
-    RETURN QUERY EXECUTE 'SELECT id, title, ownerId, DATE(creationDate), songsCount, isPublic, totalDuration FROM playlist WHERE ownerId = CAST($1 AS smallint)' USING user_id;
-    RETURN QUERY EXECUTE 'SELECT id, title, ownerId, DATE(creationDate), songsCount, isPublic, totalDuration FROM playlist WHERE isPublic = true';
-END;
-$$;
-
-SELECT DISTINCT * FROM get_playlists('1');
-
-
-
-CREATE OR REPLACE FUNCTION add_like(u_id INT, s_id INT)
-RETURNS VOID AS
-    $$
-    BEGIN
-        INSERT INTO likes (user_id, song_id)  VALUES (u_id, s_id);
-    end;
-    $$
-LANGUAGE plpgsql;
-
-SELECT add_like(2,9);
-SELECT * FROM likes;
-
-
-CREATE OR REPLACE FUNCTION get_likes(u_id INT)
-RETURNS TABLE (
-    user_id int,
-    song_id int
-)
-LANGUAGE plpgsql AS $$
-BEGIN
-    RETURN QUERY EXECUTE 'SELECT * FROM likes WHERE user_id = CAST($1 AS int)' USING u_id;
-END;
-$$;
-
-SELECT * FROM get_likes('1');
\ No newline at end of file
Index: Insert.sql
===================================================================
diff --git a/Insert.sql b/Insert.sql
deleted file mode 100644
--- a/Insert.sql	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
+++ /dev/null	(revision 652b28f7175c4c95d8ffa9d90259507258034bb1)
@@ -1,40 +0,0 @@
-INSERT INTO Song (id, title, artist, year, albumName, featuredArtist, duration, genre, link) VALUES
-
-(1, 'Stairway to heaven', 'Led Zeppelin', 2005, 'Led Zeppelin IV', null,  '482', 'Rock', 'https://www.youtube.com/watch?v=QkF3oxziUI4'),
-(2, 'Supermassive Black Hole', 'Muse', 2006, 'Black Holes and Revelations', null,  '210', 'Rock', 'https://www.youtube.com/watch?v=Xsp3_a-PMTw'),
-(3, 'La vereda de la puerta de atrás', 'Extremoduro', 2002, 'Yo, Minoría Absoluta', null, '243', 'Rock', 'https://www.youtube.com/watch?v=43S_qfT6vpo'),
-(4, 'Zu Atrapatu Arte', 'Kortatu', 1983, 'A Frontline Compilation', null, '109', 'Punk', 'https://www.youtube.com/watch?v=3gRCUbiM-QI'),
-(5, 'Disorder', 'Joy Division', 1979, 'Unknown Pleasures', null, '212', 'Post-Punk', 'https://www.youtube.com/watch?v=9ryJB-FF_Jg'),
-(6, 'Судно', 'Молчат Дома', 2018, 'Этажи', null, '141', 'Post-Punk', 'https://www.youtube.com/watch?v=s1ATTIQrmIQ'),
-(7, 'Dos Adolescentes y su Primer Amor', 'Depresión Sonora', 2022, 'El Arte de Morir muy Despacio', null, '218', 'Post-Punk', 'https://www.youtube.com/watch?v=Kcoy8dVStDk'),
-(8, 'It Was A Good Day', 'Ice Cube', 1992, 'The Predator', null, '307', 'Rap', 'https://www.youtube.com/watch?v=h4UqMyldS7Q'),
-(9, 'Bohemian Rhapsody', 'Queen', 1975, 'A Night At The Opera', null, '360', 'Rock', 'https://www.youtube.com/watch?v=fJ9rUzIMcZQ'),
-(10, 'Vivir para Contarlo', 'Violadores Del Verso', 2006, 'Vivir para Contarlo', null, '346', 'Rap', 'https://www.youtube.com/watch?v=brwIP1wI-FA'),
-(11,'C.R.E.A.M', 'Wu-Tang Clan', 1993, 'Enter The Wu-Tang', 'Method Man', '252', 'Rap', 'https://youtu.be/PBwAxmrE194?si=-il7rQ7SazE6dFTc'),
-(12, 'Ms. Jackson', 'Outkast', 2000, 'Stankonia', null,  '270', 'Rap', 'https://youtu.be/MYxAiK6VnXw?si=TTUxnJRfEYjW0lOu'),
-(13, 'Himno de Ohio', 'Don Pollo', 2024, 'El que Quiera', 'DJ Goofy', '60', 'Romantic Gospel', 'https://youtu.be/I7jx59ebS60?si=cFEDqg6MJbNFFYT7'),
-(14, 'Master of Puppets', 'Metallica', 1986, 'Master of Puppets', null, '517', 'Metal', 'https://youtu.be/E0ozmU9cJDg?si=ik58RoVbfbOHyRwP'),
-(15, 'The Trooper', 'Iron Maiden', 1983, 'Piece of Mind', null, '264', 'Metal', 'https://youtu.be/X4bgXH3sJ2Q?si=GLsJ2VZzJYTKUo62'),
-(16, 'Toxicity', 'System Of A Down', 2001, 'Toxicity', null, '225', 'Metal', 'https://youtu.be/iywaBOMvYLI?si=JTVFTOKDRvXAwkA-');
-
-
-INSERT INTO Listener(id, username, isAdmin, hash, salt) VALUES
-
-(0, 'PlayListX', true, 'hsdauih', 'snduaie'),
-(1, 'ElMiuler', true, 'asjde','ksakowme'),
-(2, 'MarieteColoquete', true, 'alsjda','nkfonejn'),
-(3, 'RazzBan', true, 'aksdnke', 'meirnkqw'),
-(4, 'Taggerkov', true, 'dekndke', 'mfkelkwne'),
-(5, 'PepeViyuela', false, 'asponkq', 'qpwkenr');
-
-INSERT INTO Playlist(id, title, ownerId, creationDate, songsCount, isPublic, totalDuration) VALUES
-(1, 'Rock', 0, '2024-04-25', default, true, default ),
-(2, 'Post-Punk', 0, '2024-04-25', default, true, default ),
-(3, 'Rap', 0, '2024-04-25', default, true, default);
-
-
-INSERT INTO songList(playlist_id, song_id) VALUES
-(1, 1), (1, 2), (1, 3), (1, 9), (2, 5), (2, 6), (2, 7);
-
-INSERT INTO likes(user_id, song_id) VALUES
-(1,2), (1,7);
\ No newline at end of file
